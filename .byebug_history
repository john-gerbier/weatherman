c
e
c
e
c
e
c
e
c
e
c
 geocode = Geocoder.search(address_params).first
address_params
c
cc
c
params
c
params
c
@forecast
c
get_weather_data(geocode.latitude, geocode.longitude)['main'].deep_symbolize_keys
zip_code = geocode.data["address"]["postcode"] || geocode.data["place_id"]
c
@forecast = Rails.cache.fetch("forecast_#{zip_code}")
@forecast = Rails.cache.fetch("forecast_#{zip_code}"
c
Rails.cache.fetch("forecast_#{zip_code}")
c
Rails.cache
Rails.cache.fetch
Rails.cache.fetch("forecast_#{zip_code}")
Rails.cache.fetch("forecast_#{zip_code}"
c
Rails.cache.fetch("forecast_#{zip_code}")
"forecast_#{zip_code}"
Rails.cache
Rails.cache.fetch("forecast_#{zip_code}")
c
zip_code
c
zip_code = geocode.data["address"]["postcode"] || geocode.data["place_id"]
c
Rails.cache
Rails.cache.clear
Rails.cache
Rails.cache.fetch("forecast_#{zip_code}")
zip_code = geocode.data["address"]["postcode"] || geocode.data["place_id"]
c
geocode.data["place_id"]
geocode
geocode.data["address"]
zip_code
c
geocode.data["address"]["postco"]
geocode.data["address"]["postcode"]
geocode.data["address"]
geocode.data[:address]
geocode.data
geocode.data["postcode"]
geocode.data[:postcode]
geocode.data
geocode[:data]
geocode[:data][:postcode]
geocode[:postcode]
geocode
c
geocode
c
geocode
gecode
c
cc
geocode = Geocoder.search(address_params).first
c
geocode = Geocoder.search(address_params).first
geocode
c
params.require(:address)
params.permit(:address)
params.permiit(:address)
params
c
params
c
forecast
c
get_weather_data(geocode.latitude, geocode.longitude)["main"]
get_weather_data(geocode.latitude, geocode.longitude)[:main]
get_weather_data(geocode.latitude, geocode.longitude)
response
c
C
WEATHER_API
c
params.require(:address)
params.require(:address).permit(:address)
params.require(:address)
params.permit(:address)[:address]
params.permit(:address)
p[:address]
p = params.permit(:address)
params.permit(:address)
params
c
params
c
params
continue
@forecast[:current_temperature]
@address
<h2>Forecast for <%= @address %></h2>
params
continue
@forecast
continue
@forecast
continue
cached_data
continue
Geocoder.search(address).first
address = ["valencia", "lahore", "punjab", "pakistan"].compact.join(', ')
Geocoder.search(address).first
address = ["302", "B", "valencia", "lahore", "punjab", "pakistan"].compact.join(', ')
@address = ["302", "B", "valencia", "lahore", "punjab", "pakistan"].compact.join(', ')
continue
response['main']['temp']
current_temperature: response['main']['temp']
continue
response = get_weather_data(lat, lon)
lon = geocode.longitude
lat = geocode.latitude
geocode
continue
Geocoder.search("lahore").first.longitude
Geocoder.search("lahore").first.longititude
Geocoder.search("lahore").first.latitude
Geocoder.search("lahore").first.coordinates
results.first.coordinates
Geocoder.search("lahore").first
Geocoder.search("lahore")
Geocoder.search(address)
@address
geocode
